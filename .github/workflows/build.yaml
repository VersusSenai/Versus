name: Build Node

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
    
jobs:
  # Lint e Testes para o Client (React)
  client-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'yarn'
        cache-dependency-path: './client/yarn.lock'

    - name: Install dependencies
      run: yarn install 
      
    - name: Build project
      run: yarn build

  # Lint e Testes para o Server (Node.js)
  server-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: './server/package-lock.json'

    - name: Install dependencies
      run: npm ci

  # Deploy (apenas na branch main)
  deploy:
    runs-on: ubuntu-latest
    needs: [client-ci, server-ci]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deploying both client and server..."
        # Adicione aqui seus comandos de deploy espec√≠ficos
        # Exemplo: rsync, SSH, ou comandos do seu provedor
